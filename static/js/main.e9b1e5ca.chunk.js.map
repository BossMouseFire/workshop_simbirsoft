{"version":3,"sources":["components/Menu/menu.module.scss","components/MainPage/mainPage.module.scss","components/OrderPage/Location/location.module.scss","components/OrderPage/orderPage.module.scss","components/MainPage/Slider/slider.module.scss","types/check.ts","components/Menu/images/Facebook_white.svg","components/Menu/images/Instagram_white.svg","components/Menu/images/Telegram_white.svg","components/Menu/menu.tsx","components/MainPage/Slider/images/arrow.svg","components/MainPage/Slider/images/image1.png","components/MainPage/Slider/images/image2.png","components/MainPage/Slider/images/image3.png","components/MainPage/Slider/images/image4.png","components/MainPage/Slider/slidersData.ts","components/MainPage/Slider/slide.tsx","components/MainPage/Slider/slider.tsx","components/MainPage/mainPage.tsx","store/actionCreators/check.ts","types/location.ts","hooks/useTypeSelector.ts","store/actionCreators/location.ts","types/cities.ts","types/points.ts","api/api.ts","store/actionCreators/points.ts","types/categories.ts","components/OrderPage/Location/location.tsx","store/actionCreators/cities.ts","components/OrderPage/next.svg","components/OrderPage/Check/check.tsx","components/OrderPage/orderPage.tsx","App.tsx","reportWebVitals.ts","store/reducers/checkReducer.ts","store/reducers/locationReducer.ts","store/reducers/citiesReducer.ts","store/reducers/pointsReducer.ts","store/reducers/categoriesReducer.ts","types/cars.ts","store/reducers/carsReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","CheckActionTypes","cx","cnBind","bind","styles","Menu","useState","active","setActive","className","menuActivated","menuClosed","burButtonClasses","cn","burButton","activeBurButton","blockClasses","block","blockUnactivated","languageButtonClasses","changeLanguageButton","changeLanguageButtonUnactivated","onClick","state","blockAction","socialNetworks","href","src","telegram","facebook","instagram","SliderData","head","mainText","imageUrl","image1","url","backgroundButton","image2","image3","image4","Slide","information","history","useHistory","slide","style","backgroundImage","content","about","background","push","Slider","position","setPosition","wrapper","newPosition","length","arrowPrev","arrow","arrowNext","inner","transition","transform","map","sliderInfo","blockNumbers","index","activeSlide","MainPage","mainPage","aboutProject","upper","mainPart","bottom","LocationActionTypes","changePickUpPoint","city","point","dispatch","type","Change_PickUpPoint","payload","changeStateButton","Change_StateButton","changeCurrentBlock","number","Change_CurrentBlock","useTypeSelector","useSelector","CitiesActionTypes","changePoint","Change_Point","changeZoom","zoom","Change_Zoom","changeCoordinates","coordinates","Change_CenterCoordinates","changeIdCity","id","Change_IdCity","PointsActionTypes","instanceApiFactory","axios","create","baseURL","headers","getCoordinates","address","a","data","params","apikey","geocode","format","get","response","array","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","reverse","item","Number","getCities","getPointsToCity","CategoriesActionTypes","fetchPointsForCity","FETCH_POINTS","FETCH_POINTS_SUCCESS","FETCH_POINTS_ERROR","Location","location","idCity","zoomDefault","cities","points","valueInput","setValueInput","pointsWithCoordinates","setPointsWithCoordinates","idCityLocal","setIdCityLocal","useDispatch","useEffect","FETCH_CITIES","FETCH_CITIES_SUCCESS","FETCH_CITIES_ERROR","getPointsCoordinates","cityId","promises","name","Promise","all","then","newArray","catch","error","console","log","enterDataBlock","onChange","e","target","value","selected","list","placeholder","mapBlock","center","geometry","properties","balloonContent","modules","onClickPoint","Check","stateCheck","check","pickUpPoint","activeButton","currentBlock","blockedBlock","onChangeCurrentBlock","Open_BlockedBlock","checkActive","requisites","priceBlock","buttonAction","blockButtonAction","OrderPage","setStateCheck","refHelp","useRef","stateHelpBlock","setStateHelpBlock","setTimeout","window","innerWidth","current","classList","add","activeHelpBlock","orderPage","blockActions","line","actions","activatedAction","blockedAction","verticalLine","helpBlock","ref","remove","nextIcon","nextIconActive","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","model","color","lease","tariff","fullTank","babyChair","rightHandDrive","loading","CarsActionTypes","categories","cars","rootReducer","combineReducers","action","FETCH_CATEGORIES","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_ERROR","FETCH_CARS","FETCH_CARS_SUCCESS","FETCH_CARS_ERROR","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9b1e5ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuClosed\":\"menu_menuClosed__1P27N\",\"blockUnactivated\":\"menu_blockUnactivated__12dwd\",\"menuActivated\":\"menu_menuActivated__1X--t\",\"changeLanguageButtonUnactivated\":\"menu_changeLanguageButtonUnactivated__3Wa85\",\"changeLanguageButton\":\"menu_changeLanguageButton__258jJ\",\"block\":\"menu_block__3cqtA\",\"blockAction\":\"menu_blockAction__2In8B\",\"socialNetworks\":\"menu_socialNetworks__3XToY\",\"burButton\":\"menu_burButton__1mI2L\",\"activeBurButton\":\"menu_activeBurButton__159Yo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"mainPage_mainPage__1xm6C\",\"aboutProject\":\"mainPage_aboutProject__1sqzG\",\"upper\":\"mainPage_upper__gpvor\",\"mainPart\":\"mainPage_mainPart__2CpKW\",\"bottom\":\"mainPage_bottom__2HI90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"location\":\"location_location__1g3pf\",\"enterDataBlock\":\"location_enterDataBlock__2Qsq3\",\"mapBlock\":\"location_mapBlock__1mWEy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderPage\":\"orderPage_orderPage__3cdgP\",\"upper\":\"orderPage_upper__2arqf\",\"blockActions\":\"orderPage_blockActions__3C-O8\",\"line\":\"orderPage_line__31-db\",\"actions\":\"orderPage_actions__2w6Z4\",\"activatedAction\":\"orderPage_activatedAction__GZgLQ\",\"blockedAction\":\"orderPage_blockedAction__1c69U\",\"blockAction\":\"orderPage_blockAction__WLOgT\",\"verticalLine\":\"orderPage_verticalLine__2CZLQ\",\"check\":\"orderPage_check__2zE-h\",\"head\":\"orderPage_head__3nALC\",\"requisites\":\"orderPage_requisites__hpip0\",\"priceBlock\":\"orderPage_priceBlock__oc44P\",\"buttonAction\":\"orderPage_buttonAction__SZYI3\",\"helpBlock\":\"orderPage_helpBlock__1nN6f\",\"activeHelpBlock\":\"orderPage_activeHelpBlock__2tn7w\",\"blockButtonAction\":\"orderPage_blockButtonAction__1qQCH\",\"nextIcon\":\"orderPage_nextIcon__3EDCq\",\"checkActive\":\"orderPage_checkActive__15fjS\",\"nextIconActive\":\"orderPage_nextIconActive__2Mgp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"slider_wrapper__2EJBj\",\"arrow\":\"slider_arrow__2dTN-\",\"arrowPrev\":\"slider_arrowPrev__2Wd3F\",\"arrowNext\":\"slider_arrowNext__9JWie\",\"inner\":\"slider_inner__1oJZa\",\"slide\":\"slider_slide__2dn9P\",\"content\":\"slider_content__i6ug6\",\"head\":\"slider_head__3Y_Ol\",\"mainText\":\"slider_mainText__2-E_0\",\"about\":\"slider_about__3q0qn\",\"blockNumbers\":\"slider_blockNumbers__3Sq-c\",\"activeSlide\":\"slider_activeSlide__1Iqiq\"};","export interface CheckState {\n    city: string;\n    pickUpPoint: string;\n    model: string;\n    color: string;\n    lease: string;\n    tariff: string;\n    fullTank: boolean;\n    babyChair: boolean;\n    rightHandDrive: boolean;\n    currentBlock: number;\n    activeButton: boolean,\n    blockedBlock: number\n}\n\nexport enum CheckActionTypes {\n    Change_PickUpPoint = \"Change_PickUpPoint\",\n    Change_Model = \"Change_Model\",\n    Change_Color = \"Change_Color\",\n    Change_Lease = \"Change_Lease\",\n    Change_Tariff = \"Change_Tariff\",\n    Change_FullTank = \"Change_FullTank\",\n    Change_BabyChair = \"Change_BabyChair\",\n    Change_RightHandDrive = \"Change_RightHandDrive\",\n    Change_CurrentBlock = \"Change_CurrentBlock\",\n    Change_StateButton = \"Change_StateButton\",\n    Open_BlockedBlock = \"Open_BlockedBlock\"\n}\n\ninterface ChangePickUpPointAction {\n    type: CheckActionTypes.Change_PickUpPoint,\n    payload: {\n        city: string,\n        point: string\n    }\n}\ninterface ChangeModelAction {\n    type: CheckActionTypes.Change_Model,\n    payload: string\n}\ninterface ChangeColorAction {\n    type: CheckActionTypes.Change_Color,\n    payload: string\n}\ninterface ChangeLeaseAction {\n    type: CheckActionTypes.Change_Lease,\n    payload: string\n}\ninterface ChangeTariffAction {\n    type: CheckActionTypes.Change_Tariff,\n    payload: string\n}\ninterface ChangeFullTankAction {\n    type: CheckActionTypes.Change_FullTank,\n    payload: boolean\n}\ninterface ChangeBabyChairAction {\n    type: CheckActionTypes.Change_BabyChair,\n    payload:boolean\n}\ninterface ChangeRightHandDriveAction {\n    type: CheckActionTypes.Change_RightHandDrive,\n    payload: boolean\n}\ninterface ChangeCurrentBlockAction {\n    type: CheckActionTypes.Change_CurrentBlock,\n    payload: number\n}\ninterface ChangeStateButton {\n    type: CheckActionTypes.Change_StateButton,\n    payload: boolean\n}\ninterface OpenBlockedBlock {\n    type: CheckActionTypes.Open_BlockedBlock,\n    payload: number\n}\n\nexport type CheckAction = ChangeBabyChairAction | ChangeColorAction | ChangeCurrentBlockAction |\n    ChangeFullTankAction | ChangeRightHandDriveAction | ChangePickUpPointAction | ChangeModelAction |\n    ChangeTariffAction | ChangeLeaseAction | ChangeStateButton | OpenBlockedBlock","export default __webpack_public_path__ + \"static/media/Facebook_white.c1876cc3.svg\";","export default __webpack_public_path__ + \"static/media/Instagram_white.98094ec4.svg\";","export default __webpack_public_path__ + \"static/media/Telegram_white.e8137bbe.svg\";","import React, {useState} from \"react\"\nimport styles from \"./menu.module.scss\"\nimport cn from \"classnames\"\nimport cnBind from \"classnames/bind\"\nimport facebook from \"./images/Facebook_white.svg\"\nimport instagram from \"./images/Instagram_white.svg\"\nimport telegram from \"./images/Telegram_white.svg\"\n\nconst cx = cnBind.bind(styles)\nconst Menu:React.FC = () => {\n    const [active, setActive] = useState<boolean>(false)\n    const className = cx({menuActivated: active}, {menuClosed: !active})\n    const burButtonClasses = cn(styles.burButton, cx({activeBurButton: active}))\n    const blockClasses = cn(styles.block, cx({blockUnactivated: !active}))\n    const languageButtonClasses = cn(styles.changeLanguageButton, cx({changeLanguageButtonUnactivated: active}))\n    return(\n        <div className={className}>\n            <div className={burButtonClasses} onClick={() => setActive(state => !state)}>\n                <span/>\n            </div>\n            <div className={blockClasses}>\n                <div className={styles.blockAction}>\n                    <span>ПАРКОВКА</span>\n                    <span>СТРАХОВКА</span>\n                    <span>БЕНЗИН</span>\n                    <span>ОБСЛУЖИВАНИЕ</span>\n                </div>\n                <div className={styles.socialNetworks}>\n                    <a href={\"/\"}>\n                        <img src={telegram}/>\n                    </a>\n                    <a href={\"/\"}>\n                        <img src={facebook}/>\n                    </a>\n                    <a href={\"/\"}>\n                        <img src={instagram}/>\n                    </a>\n                </div>\n            </div>\n            <div className={languageButtonClasses}>\n                Eng\n            </div>\n        </div>\n    )\n};\n\nexport default Menu","export default __webpack_public_path__ + \"static/media/arrow.dd0226d1.svg\";","export default __webpack_public_path__ + \"static/media/image1.af952d54.png\";","export default __webpack_public_path__ + \"static/media/image2.4d623c57.png\";","export default __webpack_public_path__ + \"static/media/image3.ef1d4860.png\";","export default __webpack_public_path__ + \"static/media/image4.62c83e6d.png\";","import image1 from \"./images/image1.png\"\nimport image2 from \"./images/image2.png\"\nimport image3 from \"./images/image3.png\"\nimport image4 from \"./images/image4.png\"\nimport {ISlide} from \"../../../types/slide\";\n\nexport const SliderData = <ISlide[]>[\n    {\n        head: \"Бесплатная парковка\",\n        mainText: \"Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.\",\n        imageUrl: `url(${image1})`,\n        url: \"\",\n        backgroundButton: \"linear-gradient(90deg, #13493F 0%, #0C7B1B 100%)\"\n    },\n    {\n        head: \"Страховка\",\n        mainText: \"Полная страховка автомобиля.\",\n        imageUrl: `url(${image2})`,\n        url: \"\",\n        backgroundButton: \"linear-gradient(90deg, #132949 0%, #0C7B67 100%)\"\n    },\n    {\n        head: \"Бензин\",\n        mainText: \"Полный бак на любой заправке города за наш счёт.\",\n        imageUrl: `url(${image3})`,\n        url: \"\",\n        backgroundButton: \"linear-gradient(90deg, #493013 0%, #7B0C3B 100%)\"\n    },\n    {\n        head: \"Обслуживание\",\n        mainText: \"Автомобиль проходит еженедельное ТО.\",\n        imageUrl: `url(${image4})`,\n        url: \"\",\n        backgroundButton: \"linear-gradient(90deg, #281349 0%, #720C7B 100%)\"\n    },\n\n]","import React from \"react\"\nimport styles from \"./slider.module.scss\"\nimport {useHistory} from \"react-router\";\nimport {ISlide} from \"../../../types/slide\";\ninterface ISlideInfo{\n    information: ISlide\n}\n\nconst Slide:React.FC<ISlideInfo> = ({information}) => {\n    const history = useHistory();\n    return(\n        <div className={styles.slide} style={{backgroundImage: information.imageUrl}}>\n            <div className={styles.content}>\n                <div className={styles.head}>\n                    {information.head}\n                </div>\n                <div className={styles.mainText}>\n                    {information.mainText}\n                </div>\n                <div className={styles.about} style={{background: information.backgroundButton}}\n                     onClick={() => history.push('/order')}>\n                    <p>\n                        Подробнее\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Slide","import React, {useState} from \"react\"\nimport arrow from \"./images/arrow.svg\"\nimport {SliderData} from \"./slidersData\";\nimport Slide from \"./slide\";\nimport styles from \"./slider.module.scss\"\nimport cn from \"classnames\"\nimport cnBind from \"classnames/bind\"\n\nconst cx = cnBind.bind(styles)\nconst Slider:React.FC = () => {\n    const [position, setPosition] = useState<number>(0)\n\n    const goToNextSlide = () => {\n        const newPosition = position === SliderData.length - 1 ? 0 : position + 1;\n        setPosition(newPosition)\n    };\n    const goToPrevSlide = () => {\n        const newPosition = position === 0 ? SliderData.length - 1 : position - 1;\n        setPosition(newPosition)\n    };\n\n    return(\n        <div className={styles.wrapper}>\n            <div onClick={goToPrevSlide} className={cn(styles.arrowPrev, styles.arrow)}>\n                <img src={arrow}/>\n            </div>\n            <div onClick={goToNextSlide} className={cn(styles.arrowNext, styles.arrow)}>\n                <img src={arrow}/>\n            </div>\n            <div\n                className={styles.inner}\n                style={{\n                    transition: \"transform ease 700ms\",\n                    transform: `translateX(-${position * 100}%)`,\n                }}\n            >\n                {SliderData.map(sliderInfo =>\n                    <Slide information={sliderInfo}/>\n                )}\n            </div>\n            <div className={styles.blockNumbers}>\n                {SliderData.map((slide, index) =>\n                    <div className={cx({activeSlide: index === position})}/>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Slider;","import React from \"react\"\nimport Menu from \"../Menu/menu\";\nimport styles from \"./mainPage.module.scss\"\nimport Slider from \"./Slider/slider\";\nimport {useHistory} from \"react-router\";\n\nconst MainPage:React.FC = () => {\n    const history = useHistory()\n    return (\n        <div className={styles.mainPage}>\n            <Menu/>\n            <div className={styles.aboutProject}>\n                <div className={styles.upper}>\n                    <span>\n                        Need for drive\n                    </span>\n                    <span>\n                        Ульяновск\n                    </span>\n                </div>\n                <div className={styles.mainPart}>\n                    <span>\n                        Каршеринг\n                    </span>\n                    <span>\n                        Need for drive\n                    </span>\n                    <span>\n                        Поминутная аренда авто твоего города\n                    </span>\n                    <div onClick={() => history.push('/order')}>\n                        <p>\n                            Забронировать\n                        </p>\n                    </div>\n                </div>\n                <div className={styles.bottom}>\n                    <span>\n                        © 2016-2019 «Need for drive»\n                    </span>\n                    <span>\n                        <a href={\"tel:+74952342244\"}>\n                            8 (495) 234-22-44\n                        </a>\n                    </span>\n                </div>\n            </div>\n            <Slider/>\n        </div>\n    )\n}\n\nexport default MainPage","import {Dispatch} from \"redux\";\nimport {CheckAction, CheckActionTypes} from \"../../types/check\";\n\nexport const changePickUpPoint = (city: string, point: string) => {\n    return (dispatch: Dispatch<CheckAction>) => {\n        dispatch({\n            type: CheckActionTypes.Change_PickUpPoint,\n            payload: {\n                city, point\n            }\n        })\n    }\n}\n\nexport const changeStateButton = (state: boolean) => {\n    return (dispatch: Dispatch<CheckAction>) => {\n        dispatch({\n            type: CheckActionTypes.Change_StateButton,\n            payload: state\n        })\n    }\n}\n\nexport const changeCurrentBlock = (number: number) => {\n    return (dispatch: Dispatch<CheckAction>) => {\n        dispatch({\n            type: CheckActionTypes.Change_CurrentBlock,\n            payload: number\n        })\n    }\n}\n\nexport const openBlockedBlock = (number: number) => {\n    return (dispatch: Dispatch<CheckAction>) => {\n        dispatch({\n            type: CheckActionTypes.Open_BlockedBlock,\n            payload: number\n        })\n    }\n}\n","\nexport interface LocationState {\n    idCity: string,\n    coordinates: number[],\n    zoomDefault: number,\n    point: string\n}\n\nexport enum LocationActionTypes {\n    Change_IdCity = \"Change_IdCity\",\n    Change_CenterCoordinates = \"Change_CenterCoordinates\",\n    Change_Zoom = \"Change_Zoom\",\n    Change_Point = \"Change_Point\",\n}\n\ninterface ChangeIdCity {\n    type: LocationActionTypes.Change_IdCity,\n    payload: string\n}\ninterface ChangeCenterCoordinates {\n    type: LocationActionTypes.Change_CenterCoordinates,\n    payload: number[]\n}\ninterface ChangeZoom {\n    type: LocationActionTypes.Change_Zoom,\n    payload: number\n}\ninterface ChangePoint {\n    type: LocationActionTypes.Change_Point,\n    payload: string\n}\n\nexport type LocationAction = ChangeCenterCoordinates | ChangeIdCity |\n    ChangePoint | ChangeZoom","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducers\";\n\nexport const useTypeSelector:TypedUseSelectorHook<RootState> = useSelector","import {Dispatch} from \"redux\";\nimport {LocationAction, LocationActionTypes} from \"../../types/location\";\n\n\nexport const changePoint = (point: string) => {\n    return (dispatch: Dispatch<LocationAction>) => {\n        dispatch({\n            type: LocationActionTypes.Change_Point,\n            payload: point\n        })\n    }\n}\n\nexport const changeZoom = (zoom: number) => {\n    return (dispatch: Dispatch<LocationAction>) => {\n        dispatch({\n            type: LocationActionTypes.Change_Zoom,\n            payload: zoom\n        })\n    }\n}\n\nexport const changeCoordinates = (coordinates: number[]) => {\n    return (dispatch: Dispatch<LocationAction>) => {\n        dispatch({\n            type: LocationActionTypes.Change_CenterCoordinates,\n            payload: coordinates\n        })\n    }\n}\n\nexport const changeIdCity = (id: string) => {\n    return (dispatch: Dispatch<LocationAction>) => {\n        dispatch({\n            type: LocationActionTypes.Change_IdCity,\n            payload: id\n        })\n    }\n}","export interface ICity{\n    id: string,\n    name: string\n}\n\nexport interface CitiesState{\n    cities: ICity[],\n    loading: boolean,\n    error: null | string\n}\n\n\nexport enum CitiesActionTypes {\n    FETCH_CITIES = \"FETCH_CITIES\",\n    FETCH_CITIES_SUCCESS = \"FETCH_CITIES_SUCCESS\",\n    FETCH_CITIES_ERROR = \"FETCH_CITIES_ERROR\"\n}\ninterface FetchCitiesAction {\n    type: CitiesActionTypes.FETCH_CITIES\n}\n\ninterface FetchCitiesActionSuccess {\n    type: CitiesActionTypes.FETCH_CITIES_SUCCESS;\n    payload: ICity[]\n}\n\ninterface FetchCitiesActionError {\n    type: CitiesActionTypes.FETCH_CITIES_ERROR;\n    payload: any\n}\n\nexport type CitiesAction = FetchCitiesAction | FetchCitiesActionSuccess | FetchCitiesActionError","export interface IPoint{\n    address: string,\n    name: string,\n    coordinates: number[]\n    cityId: {\n        name: string,\n        id: string\n    },\n    id: string\n}\n\n\nexport interface PointsState{\n    points: IPoint[],\n    loading: boolean,\n    error: null | string\n}\n\nexport enum PointsActionTypes {\n    FETCH_POINTS = \"FETCH_POINTS\",\n    FETCH_POINTS_SUCCESS = \"FETCH_POINTS_SUCCESS\",\n    FETCH_POINTS_ERROR = \"FETCH_POINTS_ERROR\"\n}\ninterface FetchCitiesAction {\n    type: PointsActionTypes.FETCH_POINTS\n}\n\ninterface FetchCitiesActionSuccess {\n    type: PointsActionTypes.FETCH_POINTS_SUCCESS;\n    payload: IPoint[]\n}\n\ninterface FetchCitiesActionError {\n    type: PointsActionTypes.FETCH_POINTS_ERROR;\n    payload: any\n}\n\nexport type PointsAction = FetchCitiesAction | FetchCitiesActionSuccess | FetchCitiesActionError","import axios from \"axios\";\nimport {IRequestCoordinates, IRequestCities, IRequestPoints, IRequestCategories, IRequestCars} from \"../types/api\";\n\nconst instanceApiFactory = axios.create({\n    baseURL: \"https://api-factory.simbirsoft1.com\",\n    headers: {\n        \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\n        \"Access-Control-Allow-Origin\": \"*\"\n    }\n})\n\nexport const getCoordinates = async (address: string) => {\n    const data = {\n        params: {\n            apikey: \"44bdb50d-a402-4e9b-9369-e8cf2154dd8f\",\n            geocode: address,\n            format: \"json\"\n        }\n    }\n    const response = await axios.get<IRequestCoordinates>('https://geocode-maps.yandex.ru/1.x/', data)\n    const array = response.data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(\" \").reverse()\n    return <number[]>array.map(item => Number(item))\n}\n\nexport const getCities = async () => {\n    return await instanceApiFactory.get<IRequestCities>(\"/api/db/city\")\n}\n\nexport const getPointsToCity = async (id: string) => {\n    return await instanceApiFactory.get<IRequestPoints>(\n        \"/api/db/point\", {\n            params: {\n                \"cityId\": id\n            }\n        })\n}\n\nexport const getCategories = async () => {\n    return await  instanceApiFactory.get<IRequestCategories>(\"/api/db/category\")\n}\n\nexport const getCars = async () => {\n    return await instanceApiFactory.get<IRequestCars>(\"/api/db/car\")\n}\n\nexport const getCarsToCategory = async (id: string) => {\n    return await instanceApiFactory.get<IRequestCars>(\n        \"/api/db/car\", {\n            params: {\n                categoryId: id\n            }\n        })\n}","import {Dispatch} from \"redux\";\nimport {PointsAction, PointsActionTypes} from \"../../types/points\";\nimport {getPointsToCity} from \"../../api/api\";\n\nexport const fetchPointsForCity = (id: string) => {\n    return async (dispatch: Dispatch<PointsAction>) => {\n        try {\n            dispatch({type: PointsActionTypes.FETCH_POINTS})\n            const response = await getPointsToCity(id)\n            dispatch({\n                type: PointsActionTypes.FETCH_POINTS_SUCCESS,\n                payload: response.data.data\n            })\n        }\n        catch (error) {\n            dispatch({type: PointsActionTypes.FETCH_POINTS_ERROR, payload: error})\n        }\n    }\n}\n","\nexport interface ICategory {\n    id: string,\n    name: string,\n    description: string\n}\n\nexport interface CategoriesState {\n    categories: ICategory[],\n    loading: boolean,\n    error: string | null\n}\n\nexport enum CategoriesActionTypes {\n    FETCH_CATEGORIES = \"FETCH_CATEGORIES\",\n    FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\",\n    FETCH_CATEGORIES_ERROR = \"FETCH_CATEGORIES_ERROR\"\n}\n\ninterface FetchCategoriesAction {\n    type: CategoriesActionTypes.FETCH_CATEGORIES\n}\n\ninterface FetchCategoriesActionSuccess {\n    type: CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS;\n    payload: ICategory[]\n}\n\ninterface FetchCategoriesActionError {\n    type: CategoriesActionTypes.FETCH_CATEGORIES_ERROR;\n    payload: any\n}\n\nexport type CategoriesAction = FetchCategoriesAction | FetchCategoriesActionSuccess | FetchCategoriesActionError","import React, {ChangeEvent, useEffect, useState} from 'react'\nimport styles from './location.module.scss'\nimport {Map, Placemark, YMaps} from \"react-yandex-maps\";\nimport {useDispatch} from \"react-redux\";\nimport {changePickUpPoint, changeStateButton} from \"../../../store/actionCreators/check\";\nimport {useTypeSelector} from \"../../../hooks/useTypeSelector\";\nimport {changeCoordinates, changeIdCity, changePoint, changeZoom} from \"../../../store/actionCreators/location\";\nimport {fetchCities} from \"../../../store/actionCreators/cities\";\nimport {fetchPointsForCity} from \"../../../store/actionCreators/points\";\nimport {getCoordinates} from \"../../../api/api\";\nimport {IPoint} from \"../../../types/points\";\n\nconst Location:React.FC = () => {\n    const {idCity, point, coordinates, zoomDefault} = useTypeSelector(state => state.location)\n    const {cities} = useTypeSelector(state => state.cities)\n    const {points} = useTypeSelector(state => state.points)\n    const [valueInput, setValueInput] = useState<string>(point)\n    const [pointsWithCoordinates, setPointsWithCoordinates] = useState<IPoint[]>([])\n    const [idCityLocal, setIdCityLocal] = useState<string>(idCity)\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchCities())\n        dispatch(changeZoom(10))\n    }, [])\n\n    useEffect(() => {\n        if(cities.length > 0){\n            dispatch(fetchPointsForCity(idCity ? idCity : cities[0].id ))\n        }\n    }, [cities])\n\n    useEffect(() => {\n        getPointsCoordinates()\n    }, [points])\n\n    useEffect(() => {\n        if(pointsWithCoordinates.length > 0){\n            if (!idCityLocal){\n                dispatch(changeCoordinates(pointsWithCoordinates[0].coordinates))\n            }\n            else{\n                pointsWithCoordinates.map((point, index) => {\n                    if (point.cityId.id === idCityLocal) {\n                        dispatch(changeCoordinates(pointsWithCoordinates[index].coordinates))\n                    }\n                })\n            }\n            dispatch(changeZoom(10))\n        }\n    }, [pointsWithCoordinates])\n\n    const getPointsCoordinates = () => {\n        let promises:any = [];\n        points.map(point => {\n            promises.push(getCoordinates(`${point.cityId.name}, ${point.address}`))\n        })\n        Promise.all(promises).then(\n            response => {\n                let newArray = points;\n                newArray.map((item, index) =>\n                    // @ts-ignore\n                    item.coordinates = response[index])\n                setPointsWithCoordinates(newArray)\n            }\n        )\n            .catch(error => console.log(error))\n\n    }\n    const onChangeIdCity = (e: ChangeEvent<HTMLSelectElement>) => {\n        const id = e.target.value\n        dispatch(fetchPointsForCity(id))\n        setIdCityLocal(id)\n        setValueInput(\"\")\n    }\n    const onChangePoint = (e: ChangeEvent<HTMLInputElement>) => {\n        setValueInput(e.target.value)\n        pointsWithCoordinates.map(point => {\n            if(point.address === e.target.value){\n                dispatch(changePickUpPoint(point.cityId.name, e.target.value))\n                dispatch(changeStateButton(true))\n                dispatch(changeZoom(16))\n                dispatch(changeCoordinates(point.coordinates))\n                dispatch(changePoint(e.target.value))\n                dispatch(changeIdCity(point.cityId.id))\n            }\n        })\n    }\n    const onClickPoint = (point: IPoint) => {\n        setValueInput(point.address)\n        dispatch(changeZoom(16))\n        dispatch(changeStateButton(true))\n        dispatch(changeCoordinates(point.coordinates))\n        dispatch(changePoint(point.address))\n        dispatch(changePickUpPoint(point.cityId.name, point.address))\n        dispatch(changeIdCity(point.cityId.id))\n    }\n\n\n    return(\n        <div className={styles.location}>\n            <div className={styles.enterDataBlock}>\n                <div>\n                    <span>Город</span>\n                    <select onChange={onChangeIdCity}>\n                        {cities.map((city) =>\n                            <option\n                                key={city.id}\n                                value={city.id}\n                                selected={idCity === city.id}\n                            >\n                                {city.name}\n                            </option>\n                        )}\n                    </select>\n                </div>\n                <div>\n                    <span>Пункт выдачи</span>\n                    <input\n                        list=\"brow\"\n                        placeholder={\"Начните вводить пункт ...\"}\n                        value={valueInput} onChange={onChangePoint}\n                    />\n                    <datalist id=\"brow\">\n                        {points.map(point =>\n                            <option value={point.address}/>\n                        )}\n                    </datalist>\n                </div>\n            </div>\n            <div className={styles.mapBlock}>\n                <span>Выбрать на карте:</span>\n                <YMaps>\n                    <Map\n                        state={{ center: coordinates, zoom: zoomDefault }}\n                    >\n                        {pointsWithCoordinates.map((point) =>\n                            <Placemark\n                                key={point.id}\n                                geometry={\n                                    point.coordinates\n                                }\n                                properties={\n                                    {\n                                        balloonContent:\n                                            `<strong>Информация о пункте выдачи</strong> <hr/> Адрес: ${point.address}`\n                                    }\n                                }\n                                modules={\n                                    ['geoObject.addon.balloon', 'geoObject.addon.hint']\n                                }\n                                onClick={() => onClickPoint(point)}\n                            />\n                        )}\n                    </Map>\n                </YMaps>\n            </div>\n        </div>\n    )\n}\n\nexport default Location","import {Dispatch} from \"redux\";\nimport {CitiesAction, CitiesActionTypes} from \"../../types/cities\";\nimport {getCities} from \"../../api/api\";\n\n\nexport const fetchCities = () => {\n    return async (dispatch: Dispatch<CitiesAction>) => {\n        try {\n            dispatch({type: CitiesActionTypes.FETCH_CITIES})\n            const response = await getCities()\n            dispatch({\n                type: CitiesActionTypes.FETCH_CITIES_SUCCESS,\n                payload: response.data.data\n            })\n        }\n        catch (error) {\n            dispatch({type: CitiesActionTypes.FETCH_CITIES_ERROR, payload: error})\n        }\n    }\n}\n","export default __webpack_public_path__ + \"static/media/next.664a68e2.svg\";","import React from 'react'\nimport styles from \"../orderPage.module.scss\";\nimport cn from \"classnames\"\nimport cnBind from \"classnames/bind\"\nimport {useTypeSelector} from \"../../../hooks/useTypeSelector\";\nimport {useDispatch} from \"react-redux\";\nimport {changeCurrentBlock, openBlockedBlock} from \"../../../store/actionCreators/check\";\n\nconst cx = cnBind.bind(styles)\n\ninterface ICheck{\n    stateCheck: boolean,\n}\n\nconst Check:React.FC<ICheck> = ({stateCheck}) => {\n    const {city, pickUpPoint, activeButton, currentBlock, blockedBlock} = useTypeSelector(state => state.check)\n    const dispatch = useDispatch()\n\n    const onChangeCurrentBlock = () => {\n        // На данный момент я просто прибавляю единицу для смены закрытого блокова.\n        // Далее при добавлении дальнейших разделов я буду проверять заполняемость полей для каждого блока.\n        dispatch(openBlockedBlock(blockedBlock + 1))\n        dispatch(changeCurrentBlock(currentBlock + 1))\n    }\n    return(\n        <div className={cn(styles.check, cx({checkActive: stateCheck}))}>\n            <div className={styles.head}>\n                Ваш заказ:\n            </div>\n            <div className={styles.requisites}>\n                <div>\n                    <span>Пункт выдачи</span>\n                    <span>{pickUpPoint ? `${city}, ${pickUpPoint}` : 'Не выбран'}</span>\n                </div>\n            </div>\n            <div className={styles.priceBlock}>\n                <span>Цена: </span>\n                <span>от 10000 до 32000 ₽</span>\n            </div>\n            <div className={cn(styles.buttonAction, cx({blockButtonAction: !activeButton}))} onClick={() => onChangeCurrentBlock()}>\n                Выбрать модель\n            </div>\n        </div>\n    )\n}\n\nexport default Check","import React, {useEffect, useRef, useState} from \"react\"\nimport Menu from \"../Menu/menu\";\nimport styles from \"./orderPage.module.scss\"\nimport Location from \"./Location/location\";\nimport nextIcon from \"./next.svg\"\nimport cn from \"classnames\"\nimport cnBind from \"classnames/bind\"\nimport Check from \"./Check/check\";\nimport {useTypeSelector} from \"../../hooks/useTypeSelector\";\nimport {useDispatch} from \"react-redux\";\nimport {changeCurrentBlock} from \"../../store/actionCreators/check\";\n\nconst cx = cnBind.bind(styles)\nconst OrderPage:React.FC = () => {\n    const [stateCheck, setStateCheck] = useState<boolean>(false);\n    const {currentBlock, blockedBlock} = useTypeSelector(state => state.check)\n    const dispatch = useDispatch()\n    const refHelp = useRef() as React.MutableRefObject<HTMLDivElement>;\n    const [stateHelpBlock, setStateHelpBlock] = useState<boolean>(false)\n    const onChangeCurrentBlock = (number: number) => {\n        dispatch(changeCurrentBlock(number))\n    }\n    useEffect(() => {\n        setTimeout(() => {\n            if(window.innerWidth < 1024 && !stateHelpBlock){\n                refHelp.current.classList.add(styles.activeHelpBlock)\n            }\n        }, 3000)\n    }, [])\n\n    const changeStateCheck = () => {\n        refHelp.current.classList.remove(styles.activeHelpBlock)\n        setStateHelpBlock(true)\n        setStateCheck(state => !state)\n    }\n    return(\n        <>\n            <Menu/>\n            <div className={styles.orderPage}>\n                <div className={styles.upper}>\n                    <span>\n                        Need for drive\n                    </span>\n                    <span>\n                        Ульяновск\n                    </span>\n                </div>\n                <div className={styles.blockActions}>\n                    <div className={styles.line}/>\n                    <div className={styles.actions}>\n                        <span className={cx({activatedAction: currentBlock === 0})}\n                              onClick={() => onChangeCurrentBlock(0)}>\n                            Местоположение\n                        </span>\n                        <div/>\n                        <span className={cn(cx({blockedAction: blockedBlock < 1}, {activatedAction: currentBlock === 1}))}\n                              onClick={() => onChangeCurrentBlock(1)}>\n                            Модель\n                        </span>\n                        <div/>\n                        <span className={cn(cx({blockedAction: blockedBlock < 2}, {activatedAction: currentBlock === 2}))}\n                              onClick={() => onChangeCurrentBlock(2)}>\n                            Дополнительно\n                        </span>\n                        <div/>\n                        <span className={cn(cx({blockedAction: blockedBlock < 3}, {activatedAction: currentBlock === 3}))}\n                              onClick={() => onChangeCurrentBlock(3)}>\n                            Итого\n                        </span>\n                    </div>\n                    <div className={styles.line}/>\n                </div>\n                <div className={styles.blockAction}>\n                    {\n                        currentBlock === 0 ? <Location/> : <div></div>\n\n                    }\n                    <div className={styles.verticalLine}/>\n                    <Check stateCheck={stateCheck}/>\n                    <div className={styles.helpBlock} ref={refHelp}>\n                        Нажмите на стрелку, чтобы продолжить\n                    </div>\n                    <div onClick={changeStateCheck}>\n                        <img src={nextIcon} className={cn(styles.nextIcon, cx({nextIconActive: stateCheck}))}/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default OrderPage;","import React from \"react\"\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport MainPage from \"./components/MainPage/mainPage\";\nimport OrderPage from \"./components/OrderPage/orderPage\";\n\nconst App:React.FC = () => {\n    return(\n            <Switch>\n                <Route exact path={\"/\"} component={MainPage}/>\n                <Route path={\"/order\"} component={OrderPage}/>\n                <Redirect to={\"/\"}/>\n            </Switch>\n    )\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CheckAction, CheckActionTypes, CheckState} from \"../../types/check\";\n\nconst initialState:CheckState = {\n    city: \"\",\n    pickUpPoint: \"\",\n    model: \"\",\n    color: \"\",\n    lease: \"\",\n    tariff: \"\",\n    fullTank: false,\n    babyChair: false,\n    rightHandDrive: false,\n    currentBlock: 0,\n    blockedBlock: 0,\n    activeButton: false\n}\n\nexport const checkReducer = (state = initialState, action: CheckAction):CheckState => {\n    switch (action.type){\n        case CheckActionTypes.Change_PickUpPoint:\n            return {\n                city: action.payload.city, pickUpPoint: action.payload.point, model: state.model, color: state.color,\n                lease: state.lease, tariff: state.tariff, fullTank: state.fullTank,\n                babyChair: state.babyChair, rightHandDrive: state.rightHandDrive,\n                currentBlock: state.currentBlock, activeButton: state.activeButton,\n                blockedBlock: state.blockedBlock,\n            }\n        case CheckActionTypes.Change_StateButton:\n            return {\n                city: state.city,\n                pickUpPoint: state.pickUpPoint, model: state.model, color: state.color,\n                lease: state.lease, tariff: state.tariff, fullTank: state.fullTank,\n                babyChair: state.babyChair, rightHandDrive: state.rightHandDrive,\n                currentBlock: state.currentBlock, activeButton: action.payload,\n                blockedBlock: state.blockedBlock\n            }\n        case CheckActionTypes.Change_CurrentBlock:\n            return {\n                city: state.city,\n                pickUpPoint: state.pickUpPoint, model: state.model, color: state.color,\n                lease: state.lease, tariff: state.tariff, fullTank: state.fullTank,\n                babyChair: state.babyChair, rightHandDrive: state.rightHandDrive,\n                currentBlock: action.payload, activeButton: state.activeButton,\n                blockedBlock: state.blockedBlock,\n            }\n        case CheckActionTypes.Open_BlockedBlock:\n            return {\n                city: state.city,\n                pickUpPoint: state.pickUpPoint, model: state.model, color: state.color,\n                lease: state.lease, tariff: state.tariff, fullTank: state.fullTank,\n                babyChair: state.babyChair, rightHandDrive: state.rightHandDrive,\n                currentBlock: state.currentBlock, activeButton: state.activeButton,\n                blockedBlock: action.payload,\n            }\n        default:\n            return state\n    }\n}","import {LocationAction, LocationActionTypes, LocationState} from \"../../types/location\";\n\nconst initialState:LocationState = {\n    idCity: \"\",\n    zoomDefault: 10,\n    coordinates: [],\n    point: \"\"\n}\n\nexport const locationReducer = (state = initialState, action: LocationAction):LocationState => {\n    switch (action.type) {\n        case LocationActionTypes.Change_CenterCoordinates:\n            return {\n                idCity: state.idCity, zoomDefault: state.zoomDefault,\n                coordinates: action.payload, point: state.point\n            }\n        case LocationActionTypes.Change_IdCity:\n            return {\n                idCity: action.payload, zoomDefault: state.zoomDefault,\n                coordinates: state.coordinates, point: state.point\n            }\n        case LocationActionTypes.Change_Point:\n            return {\n                idCity: state.idCity, zoomDefault: state.zoomDefault,\n                coordinates: state.coordinates, point: action.payload\n            }\n        case LocationActionTypes.Change_Zoom:\n            return {\n                idCity: state.idCity, zoomDefault: action.payload,\n                coordinates: state.coordinates, point: state.point\n            }\n        default:\n            return state\n    }\n}\n","import {CitiesAction, CitiesActionTypes, CitiesState} from \"../../types/cities\";\n\nconst initialState:CitiesState = {\n    cities: [],\n    loading: false,\n    error: null\n}\n\nexport const citiesReducer = (state = initialState, action: CitiesAction):CitiesState => {\n    switch (action.type){\n        case CitiesActionTypes.FETCH_CITIES:\n            return{ cities: [], loading: true, error: null }\n        case CitiesActionTypes.FETCH_CITIES_SUCCESS:\n            return { cities: action.payload, loading: false, error: null }\n        case CitiesActionTypes.FETCH_CITIES_ERROR:\n            return {cities: [], loading: false, error: action.payload}\n        default:\n            return state\n    }\n}","import {PointsAction, PointsActionTypes, PointsState} from \"../../types/points\";\n\nconst initialState:PointsState = {\n    points: [],\n    loading: false,\n    error: null\n}\n\nexport const pointsReducer = (state = initialState, action: PointsAction):PointsState => {\n    switch (action.type){\n        case PointsActionTypes.FETCH_POINTS:\n            return {points: [], loading: true, error: null}\n        case PointsActionTypes.FETCH_POINTS_SUCCESS:\n            return {points: action.payload, loading: false, error: null}\n        case PointsActionTypes.FETCH_POINTS_ERROR:\n            return {points: [], loading: false, error: action.payload}\n        default:\n            return state\n    }\n}","import {CategoriesAction, CategoriesActionTypes, CategoriesState} from \"../../types/categories\";\n\nconst initialState:CategoriesState = {\n    categories: [],\n    loading: false,\n    error: null\n}\n\nexport const categoriesReducer = (state = initialState, action: CategoriesAction):CategoriesState => {\n    switch (action.type){\n        case CategoriesActionTypes.FETCH_CATEGORIES:\n            return {categories: [], loading: true, error: null}\n        case CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS:\n            return {categories: action.payload, loading: false, error: null}\n        case CategoriesActionTypes.FETCH_CATEGORIES_ERROR:\n            return {categories: [], loading: false, error: action.payload}\n        default:\n            return state\n    }\n}","import {ICategory} from \"./categories\";\n\nexport interface ICar {\n    id: string,\n    name: string,\n    description: string,\n    number: string,\n    categoryId: ICategory,\n    thumbnail: {\n        path: string\n    },\n    tank: number,\n    color: string[],\n}\n\nexport interface CarsState {\n    cars: ICar[],\n    loading: boolean,\n    error: string | null\n}\n\nexport enum CarsActionTypes {\n    FETCH_CARS = \"FETCH_CARS\",\n    FETCH_CARS_SUCCESS = \"FETCH_CARS_SUCCESS\",\n    FETCH_CARS_ERROR = \"FETCH_CARS_ERROR\"\n}\n\ninterface FetchCarsAction {\n    type: CarsActionTypes.FETCH_CARS\n}\n\ninterface FetchCarsActionSuccess {\n    type: CarsActionTypes.FETCH_CARS_SUCCESS;\n    payload: ICar[]\n}\n\ninterface FetchCarsActionError {\n    type: CarsActionTypes.FETCH_CARS_ERROR;\n    payload: any\n}\n\nexport type CarsAction = FetchCarsAction | FetchCarsActionSuccess | FetchCarsActionError","import {CarsAction, CarsActionTypes, CarsState} from \"../../types/cars\";\n\nconst initialState:CarsState = {\n    cars: [],\n    loading: false,\n    error: null\n}\n\nexport const carsReducer = (state = initialState, action: CarsAction):CarsState => {\n    switch (action.type){\n        case CarsActionTypes.FETCH_CARS:\n            return {cars: [], loading: true, error: null}\n        case CarsActionTypes.FETCH_CARS_SUCCESS:\n            return {cars: action.payload, loading: false, error: null}\n        case CarsActionTypes.FETCH_CARS_ERROR:\n            return {cars: [], loading: false, error: action.payload}\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {checkReducer} from \"./checkReducer\";\nimport {locationReducer} from \"./locationReducer\";\nimport {citiesReducer} from \"./citiesReducer\";\nimport {pointsReducer} from \"./pointsReducer\";\nimport {categoriesReducer} from \"./categoriesReducer\";\nimport {carsReducer} from \"./carsReducer\";\n\nexport const rootReducer = combineReducers({\n    check: checkReducer,\n    location: locationReducer,\n    cities: citiesReducer,\n    points: pointsReducer,\n    categories: categoriesReducer,\n    cars: carsReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {rootReducer} from \"./reducers\";\n\n\n// @ts-ignore\n//const composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\n\nexport const store = createStore(rootReducer,  applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}